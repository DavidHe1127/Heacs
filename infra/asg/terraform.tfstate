{
  "version": 4,
  "terraform_version": "0.12.18",
  "serial": 20,
  "lineage": "b6c60765-68a9-af8f-b0b2-685958aefefc",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_appautoscaling_policy",
      "name": "ecs-scaling-out-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "adjustment_type": null,
            "arn": "arn:aws:autoscaling:ap-southeast-2:216659404274:scalingPolicy:e6e1a8d9-84b4-4620-b1be-dcdbdffe5870:resource/ecs/service/dockerzon/temperature-api:policyName/DockerzonServiceScaleOutPolicy",
            "cooldown": null,
            "id": "DockerzonServiceScaleOutPolicy",
            "metric_aggregation_type": null,
            "min_adjustment_magnitude": null,
            "name": "DockerzonServiceScaleOutPolicy",
            "policy_type": "StepScaling",
            "resource_id": "service/dockerzon/temperature-api",
            "scalable_dimension": "ecs:service:DesiredCount",
            "service_namespace": "ecs",
            "step_adjustment": [],
            "step_scaling_policy_configuration": [
              {
                "adjustment_type": "PercentChangeInCapacity",
                "cooldown": 300,
                "metric_aggregation_type": "Average",
                "min_adjustment_magnitude": 1,
                "step_adjustment": [
                  {
                    "metric_interval_lower_bound": "0",
                    "metric_interval_upper_bound": "",
                    "scaling_adjustment": 100
                  }
                ]
              }
            ],
            "target_tracking_scaling_policy_configuration": []
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_appautoscaling_target.ecs-service-auto-scaling-target"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_appautoscaling_target",
      "name": "ecs-service-auto-scaling-target",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "service/dockerzon/temperature-api",
            "max_capacity": 10,
            "min_capacity": 1,
            "resource_id": "service/dockerzon/temperature-api",
            "role_arn": "arn:aws:iam::216659404274:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            "scalable_dimension": "ecs:service:DesiredCount",
            "service_namespace": "ecs"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_metric_alarm",
      "name": "dockerzon-service-scale-in-alarm",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "actions_enabled": true,
            "alarm_actions": [],
            "alarm_description": "Scale service in when CPUUtilization fall short of specified threshold",
            "alarm_name": "DockerzonServiceScaleInAlarm",
            "arn": "arn:aws:cloudwatch:ap-southeast-2:216659404274:alarm:DockerzonServiceScaleInAlarm",
            "comparison_operator": "LessThanOrEqualToThreshold",
            "datapoints_to_alarm": 1,
            "dimensions": {
              "ClusterName": "dockerzon",
              "ServiceName": "temperature-api"
            },
            "evaluate_low_sample_count_percentiles": "",
            "evaluation_periods": 1,
            "extended_statistic": "",
            "id": "DockerzonServiceScaleInAlarm",
            "insufficient_data_actions": [],
            "metric_name": "CPUUtilization",
            "metric_query": [],
            "namespace": "AWS/ECS",
            "ok_actions": [],
            "period": 60,
            "statistic": "Average",
            "tags": {},
            "threshold": 25,
            "threshold_metric_id": "",
            "treat_missing_data": "missing",
            "unit": ""
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_metric_alarm",
      "name": "dockerzon-service-scale-out-alarm",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "actions_enabled": true,
            "alarm_actions": [
              "arn:aws:autoscaling:ap-southeast-2:216659404274:scalingPolicy:e6e1a8d9-84b4-4620-b1be-dcdbdffe5870:resource/ecs/service/dockerzon/temperature-api:policyName/DockerzonServiceScaleOutPolicy"
            ],
            "alarm_description": "Scale service out when CPUUtilization exceeds specified threshold",
            "alarm_name": "DockerzonServiceScaleOutAlarm",
            "arn": "arn:aws:cloudwatch:ap-southeast-2:216659404274:alarm:DockerzonServiceScaleOutAlarm",
            "comparison_operator": "GreaterThanThreshold",
            "datapoints_to_alarm": 1,
            "dimensions": {
              "ClusterName": "dockerzon",
              "ServiceName": "temperature-api"
            },
            "evaluate_low_sample_count_percentiles": "",
            "evaluation_periods": 1,
            "extended_statistic": "",
            "id": "DockerzonServiceScaleOutAlarm",
            "insufficient_data_actions": [],
            "metric_name": "CPUUtilization",
            "metric_query": [],
            "namespace": "AWS/ECS",
            "ok_actions": [],
            "period": 60,
            "statistic": "Average",
            "tags": {},
            "threshold": 75,
            "threshold_metric_id": "",
            "treat_missing_data": "missing",
            "unit": ""
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_appautoscaling_policy.ecs-scaling-out-policy",
            "aws_appautoscaling_target.ecs-service-auto-scaling-target"
          ]
        }
      ]
    }
  ]
}
