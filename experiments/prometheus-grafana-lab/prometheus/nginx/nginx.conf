http {
    upstream backend {
      server 127.0.0.1:3100;
    }

    resolver 127.0.0.1 valid=60s;
    error_log /var/log/nginx/error.log error;

    server {
        # "deferred" reduces the number of formalities between the server and client.
        listen 80 default_server deferred;
        # server_name PLACEHOLDER_VHOST;

        # Static asset path, which is read from the PLACEHOLDER_BACKEND_NAME
        # container's VOLUME.
        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            add_header X-SERVE "served by location /";
            try_files $uri $uri/ /index.html;
        }
    }

    server {
      listen 8443 ssl http2 default_server;

      ssl_protocols TLSv1.2;

      ssl_certificate     /etc/certs/nginx.crt;
      ssl_certificate_key /etc/certs/nginx.key;
      # ssl_trusted_certificate /etc/ssl/client_auth.crt;
      # ssl_verify_client optional_no_ca;

      root /tmp/NOROOT;

      # We want to proxy as transparently as possible by default as we
      # are only terminating TLS and handling auth, but not rewriting any
      # requests.  This means we stream requests and responses rather than
      # buffering
      #
      # We also don't know if  we can trust the backend we are in front of
      # (either directly or any of their backends), so we ignore headers coming
      # back that could change nginx behaviour

      postpone_output 0;
      merge_slashes off;
      msie_padding off;

      location / {
        # if ($ssl_client_verify != 'SUCCESS') { return 403; }
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_ignore_headers  "X-Accel-Redirect" "X-Accel-Expires" "X-Accel-Limit-Rate" "X-Accel-Buffering" "X-Accel-Charset" "Expires" "Cache-Control" "Set-Cookie" "Vary";

        proxy_pass http://backend;
      }
    }

    # server {
    #     listen              8443 ssl;
    #     server_name         nginx;
    #     ssl_certificate     /etc/certs/nginx.crt;
    #     ssl_certificate_key /etc/certs/nginx.key;

    #     location /movies {
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-NGINX "nginx-debug-dave";
    #         proxy_redirect off;
    #         proxy_pass http://localhost:3100$request_uri;
    #     }
    # }
}

events {}
